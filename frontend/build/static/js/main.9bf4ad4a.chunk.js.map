{"version":3,"sources":["components/reusable/button.js","utils/colors.js","components/navbar.js","components/reusable/carousel.js","components/reusable/modal.js","components/reusable/card.js","services/paginationService.js","components/reusable/pagination.js","components/listings.js","components/signup.js","components/login.js","components/app.js","index.js"],"names":["Button","type","text","action","buttonClass","className","onClick","COLORS","white","black","catalineblue","lochinvar","pastelgreen","algaegreen","loafer","NavBar","user","navBrandStyle","color","href","style","size","method","CustomCarousel","images","modal","Carousel","map","image","Item","src","alt","Caption","indexOf","length","ModalPop","closePop","showModal","item","heading","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","id","Body","dangerouslySetInnerHTML","__html","attrgroup","titletextonly","postinginfo","mapaddress","postingbody","Card","element","useState","setShow","titleText","replace","paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","CustomPagination","props","itemsCount","onPageChange","currentPage","pagesCount","Math","ceil","num","push","Pagination","active","First","Prev","Next","Last","Listings","allData","setAllData","total","setTotal","setCurrentPage","posts","setPosts","currentSort","setCurrentSort","sortStyle","fetchData","url","a","fetch","then","res","json","_listings","fetchCount","_total","useEffect","handleSort","sort","listing","SignUp","sendUser","data","headers","body","JSON","stringify","response","console","log","initialValues","firstName","lastName","email","password","validationSchema","Yup","max","required","confirmPassword","oneOf","onSubmit","values","setSubmitting","setTimeout","formik","class","handleSubmit","htmlFor","getFieldProps","touched","errors","LogIn","sendLogin","App","setUser","_user","username","path","exact","render","to","ReactDom","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bf4ad4a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../css/button.css\";\n\nfunction Button({type, text, action}) {\n    const buttonClass = (type === \"primary\") ? \"btn btn-outline-primary ml-1\" : \"btn btn-outline-success ml-1\";\n\n\treturn (\n        <>\n            {\n                (action) \n                ? <button className={buttonClass} onClick={action}>{text}</button>\n                : <button className={buttonClass} type=\"submit\">{text}</button>\n            }\n        </>\n        \n    );\n}\nexport default Button;\n","const COLORS = {\n    white: '#fff',\n    black: '#000',\n    catalineblue: '#05386B',\n    lochinvar: '#379683', //Dull Green\n    pastelgreen: '#5CDB95',\n    algaegreen: '#8EE4AF',\n    loafer: '#EDF5E1' //Offwhiteish\n}\n\nexport default COLORS;","import React from \"react\";\nimport Button from \"../components/reusable/button\";\nimport * as Icon from 'react-bootstrap-icons';\nimport COLORS from \"../utils/colors\";\nimport \"../css/navbar.css\"\n\nfunction NavBar({user}) {\n    const navBrandStyle = {\n        color: COLORS.catalineblue\n    }\n\treturn (\n\t\t<nav className=\"navbar navbar-light bg-loafer shadow\">\n            <a className=\"ml-2\" href=\"/home\" style={navBrandStyle}>\n                <h5 className=\"d-inline\">\n                    RentHouse\n                </h5>\n            </a>\n           \n            <a className=\"ml-5\" href=\"/home\">\n                <Icon.HouseFill color={COLORS.catalineblue} size={40}/>\n            </a>\n            <div className='float-right'>\n                {user ? \n                    (\n                        <div>\n                            Welcome {user}\n                            <form action=\"/logout\" method=\"get\" className=\"d-inline\">\n                                <Button type=\"primary\" href=\"/logout\" text=\"Logout\"/>\n                            </form>\n                        </div>\n                        \n                    ) : (\n                        <>\n                            <a href=\"/signup\">\n                                <Button type=\"success\" text=\"Signup\"/> \n                            </a>\n                            <a href=\"/login\">\n                                <Button type=\"success\" href=\"/login\" text=\"Login\"/>\n                            </a>   \n                        </>\n                    )\n                }\n                \n                \n            </div>\n        </nav>\n\t);\n}\nexport default NavBar;\n","import React from \"react\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport \"../../css/carousel.css\";\n// import ReactSpinner from 'react-bootstrap-spinner'\n\nfunction CustomCarousel({images, modal}) {\n\treturn (\t\n        <Carousel className=\"carousel-custom\">\n            {/* <ReactSpinner type=\"border\" color=\"primary\" size=\"5\" /> */}\n            {images.map (image =>\n                <Carousel.Item key={images.indexOf(image)}>\n                    <img\n                    className={(modal) ? \"d-block carousel-modal-img\" : \"d-block carousel-img\"}\n                    src={image}\n                    alt=\"First slide\"\n                    />\n                    <Carousel.Caption>\n                    <p>{images.indexOf(image) + 1} / {images.length}</p>\n                    </Carousel.Caption>\n                </Carousel.Item> \n            )}\n            \n        </Carousel>\n\t);\n}\nexport default CustomCarousel;\n","import React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport CustomCarousel from \"./carousel\";\nimport * as Icon from 'react-bootstrap-icons';\nimport COLORS from \"../../utils/colors\";\nimport \"../../css/modal.css\";\n\nexport default function ModalPop({closePop, showModal, item, heading}) {\n    return (\n        <>\n            <Modal \n                show={showModal}\n                onHide={closePop}\n                size=\"xl\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >  \n                <Modal.Header className=\"header-std\" closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\" ><span className=\"card-about mr-2\">Area:</span>{heading}</Modal.Title>\n                </Modal.Header> \n                <Modal.Body className=\"p-0\">\n                <div className=\"card shadow\">\n                    <div className=\"card-body\">\n                        <CustomCarousel images={item.images} modal={true}/>\n                        <div className=\"p-2\">\n                            <div className=\"title-icons pt-2\">\n                                <Icon.HouseFill className=\"card-icon\" color={COLORS.lochinvar} size={22}/>\n                                <h5 className=\"card-title d-inline mr-2\" dangerouslySetInnerHTML={{__html: item.attrgroup}}></h5>\n                                {/* <h5 className=\"card-title d-inline mr-2\" dangerouslySetInnerHTML={{__html: item.attrgroup}}></h5> */}\n                                <h5 className=\"card-title d-inline mr-2 float-right\" dangerouslySetInnerHTML={{__html: item[\"result-price\"]}}></h5>\n                                <Icon.TagFill className=\"float-right\" color={COLORS.lochinvar} size={22}/>\n                            </div>\n                            <hr />\n                            <p>\n                                <span className=\"card-about mr-2\">About:</span>{item.titletextonly}\n                            </p>\n                            <hr />\n                            \n                            <Icon.Calendar2CheckFill className=\"card-icon mr-2\" color={COLORS.lochinvar} size={20}/>\n                            <div className=\"card-date d-inline\" dangerouslySetInnerHTML={{__html: item.postinginfo}}></div>\n                            {/* <div className=\"dimensions\" dangerouslySetInnerHTML={{__html: item.attrgroup}}></div> */}\n                            <div>\n                                {(item.mapaddress) ? <Icon.GeoFill className=\"mr-2\" color={COLORS.lochinvar} size={20}/> : null}\n                                <div className=\"d-inline\" dangerouslySetInnerHTML={{__html: item.mapaddress}}></div>\n                            </div>\n                            <hr />\n\n                            {/* Put this in modal pop-up */}\n                            <div className=\"pb-3\">\n                                <span className=\"card-about mr-2\">Details:</span>\n                                <div className=\"card-details\" dangerouslySetInnerHTML={{__html: item.postingbody}}></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n}","import React, {useState} from \"react\";\nimport \"../../css/card.css\";\nimport CustomCarousel from \"./carousel\";\nimport * as Icon from 'react-bootstrap-icons';\nimport COLORS from \"../../utils/colors\";\nimport ModalPop from \"../reusable/modal\";\nimport Button from \"../reusable/button\";\n\nfunction Card({element}) {\n    const [show, setShow] = useState(false);\n\n    const titleText = element[\"result-hood\"].replace(/[()]/g,\"\");\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\treturn (\t\n        <div className=\"card shadow\">\n            <div className=\"card-header\">\n                <h4 className=\"m-0 d-inline\"><span className=\"card-about mr-2\">Area:</span>{titleText}</h4>\n                <div className=\"float-right\" >\n                    <Button type=\"success\" action={handleShow} text=\"Expand\"/> \n                </div>\n            </div>\n            <div className=\"card-body\">\n                <CustomCarousel images={element.images}/>\n                <div className=\"title-icons pt-2\">\n                    <Icon.HouseFill className=\"card-icon\" color={COLORS.lochinvar} size={22}/>\n                    <h5 className=\"card-title d-inline mr-2\" dangerouslySetInnerHTML={{__html: element.attrgroup}}></h5>\n                    {/* <h5 className=\"card-title d-inline mr-2\" dangerouslySetInnerHTML={{__html: element.attrgroup}}></h5> */}\n                    <h5 className=\"card-title d-inline mr-2 float-right\" dangerouslySetInnerHTML={{__html: element[\"result-price\"]}}></h5>\n                    <Icon.TagFill className=\"float-right\" color={COLORS.lochinvar} size={22}/>\n                </div>\n                \n                <p className=\"card-text\">\n                    <span className=\"card-about mr-2\">About:</span>{element.titletextonly}\n                </p>\n                \n                <Icon.Calendar2CheckFill className=\"card-icon mr-2\" color={COLORS.lochinvar} size={20}/>\n                <div className=\"card-date d-inline\" dangerouslySetInnerHTML={{__html: element.postinginfo}}></div>\n                {/* <div className=\"dimensions\" dangerouslySetInnerHTML={{__html: element.attrgroup}}></div> */}\n                <div>\n                    <Icon.GeoFill className=\"mr-2\" color={COLORS.lochinvar} size={20}/>\n                    {(element.mapaddress) \n                        ? <div className=\"map d-inline\" dangerouslySetInnerHTML={{__html: element.mapaddress}}></div>\n                        : <div className=\"map d-inline\">N/A</div>\n                    }\n                </div>\n                {/* Put this in modal pop-up */}\n                {/* <div className=\"card-details\" dangerouslySetInnerHTML={{__html: element.postingbody}}></div> */}\n            </div>\n            <ModalPop \n                item={element}\n                closePop={handleClose}\n                showModal={show}\n                heading={titleText}\n            />\n        </div>\n\t);\n}\nexport default Card;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Pagination from \"react-bootstrap/Pagination\";\nimport \"../../css/pagination.css\";\n\nexport default function CustomPagination(props) {\n    const items = [];\n    const {itemsCount, pageSize, onPageChange, currentPage} = props;\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n\n    if (pagesCount <= 1) return null;\n    \n    for (let num = 1; num <= pagesCount; num++) {\n      items.push(\n        <Pagination.Item \n          onClick={() => {onPageChange(num)}}\n          key={num}\n          active={num === currentPage}>\n          {num}\n        </Pagination.Item>\n      );\n    }\n\n    return (\n      <>\n        <Pagination>\n          <Pagination.First onClick={() => {onPageChange(1)}}/>\n          <Pagination.Prev onClick={() => {\n            let page = (currentPage === 1) ? currentPage : currentPage - 1;\n            onPageChange(page)}\n          }/>\n          {items}\n          <Pagination.Next onClick={() => {\n            let page = (currentPage === pagesCount) ? currentPage : currentPage + 1;\n            onPageChange(page)}\n          }/>\n          <Pagination.Last onClick={() => {onPageChange(pagesCount)}}/>\n        </Pagination>\n      </>\n    );\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect }  from \"react\";\nimport \"../css/listings.css\"\nimport Card from \"./reusable/card\";\nimport { paginate } from '../services/paginationService';\nimport CustomPagination from '../components/reusable/pagination';\nimport COLORS from \"../utils/colors\";\n\n\nfunction Listings() {\n    const [allData, setAllData] = useState([]);\n    const [total, setTotal] = useState(null);\n    const [pageSize] = useState(4);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [posts, setPosts] = useState(paginate(allData, currentPage, pageSize));\n    const [currentSort, setCurrentSort] = useState(\"default\");\n\n    const sortStyle = {\n        color: COLORS.loafer\n    }\n\n    const fetchData = async function (url) {\n        const _listings = await fetch(url)\n        .then(res => res.json());\n        setAllData(_listings);\n    }\n\n    const fetchCount = async function () {\n        const _total = await fetch(\"/getCount\")\n        .then(res => res.json());\n        setTotal(_total);\n    }\n    \n    useEffect(() => {\n        fetchData(\"/getListings\");\n    }, []);\n\n    useEffect(() => {\n        fetchCount();\n    }, []);\n\n    useEffect(() => {\n        setPosts(paginate(allData, currentPage, pageSize));\n    }, [allData, currentPage, pageSize]);\n\n\n    const handlePageChange = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    }\n\n    const handleSort = (url, sort) => {\n        fetchData(url);\n        setCurrentSort(sort);\n    }\n\n\treturn (\n        <>\n            <div className=\"container listings p-0 mt-4\">\n                <h1 className=\"main-heading text-center pb-2\">Find Your Perfect Home out of <span className=\"listing-about\">{total}</span> homes</h1>\n                <h5 className=\"main-heading text-center pb-2\">\n                    <hr className=\"mt-0\"/>\n                    <span className=\"listing-about\">Sort By: </span>\n                    <a \n                        className={(currentSort === \"default\") ? \"sort-link ml-2 sort-active\" : \"sort-link ml-2\"}\n                        onClick={() => {handleSort(\"/getListings\", \"default\")}}\n                        style={sortStyle}>\n                        Default\n                    </a>\n                    <span className=\"ml-2\">|</span>\n                    <a \n                        className={(currentSort === \"priceAsc\") ? \"sort-link ml-2 sort-active\" : \"sort-link ml-2\"}\n                        onClick={() => {handleSort(\"/getSortAsc\", \"priceAsc\")}}\n                        style={sortStyle}>\n                        Price Low to High\n                    </a>\n                    <span className=\"ml-2\">|</span>\n                    <a \n                        className={(currentSort === \"priceDesc\") ? \"sort-link ml-2 sort-active\" : \"sort-link ml-2\"}\n                        onClick={() => {handleSort(\"/getSortDesc\", \"priceDesc\")}}\n                        style={sortStyle}>\n                        Price High to Low\n                    </a>\n                </h5>\n                \n\n                {posts.map (listing => \n                    <div className=\"col-6 p-2 d-inline-block\" key={posts.indexOf(listing)}>\n                        <Card element={listing} />\n                    </div>     \n                )}\n                <CustomPagination \n                    itemsCount={allData.length}\n                    pageSize={pageSize}\n                    onPageChange={handlePageChange}\n                    currentPage={currentPage}\n                />\n                \n            </div>\n        </>\n\t);\n}\nexport default Listings;\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../css/signup.css\";\nimport Button from \"../components/reusable/button\";\n\nexport default function SignUp() {\n    const sendUser = async function (data) {\n        const response = await fetch('/signup', {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          body: JSON.stringify(data)\n        }).then(res => res.json());\n        console.log(response);\n        // if(response) {\n        //   alert(response.message);\n        // }\n    }\n    return (\n      <div className=\"container form-container\">\n        <h1 className=\"main-heading text-center p-5\">Sign Up to <span className=\"form-about\">RentHouse</span> </h1>\n        <Formik\n            initialValues={{ firstName: \"\", lastName: \"\", email: \"\", password:\"\" }}\n            validationSchema={Yup.object({\n                firstName: Yup.string()\n                .max(15, \"Must be 15 characters or less\")\n                .required(\"*Required\"),\n                lastName: Yup.string()\n                .max(20, \"Must be 20 characters or less\")\n                .required(\"*Required\"),\n                email: Yup.string().email(\"Invalid email address\").required(\"*Required\"),\n                password: Yup.string().required('*Required'),\n                confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    setSubmitting(false);\n                    delete values.confirmPassword;\n                    sendUser(values);\n                }, 400);\n            }}\n            >\n            {(formik) => (\n                <form class=\"form-area\" onSubmit={formik.handleSubmit}>\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"firstName\">First Name</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input\n                                id=\"firstName\"\n                                type=\"text\"\n                                {...formik.getFieldProps(\"firstName\")}\n                            />\n                        </div>\n                        <div className=\"col-2 error-field\">\n                            {formik.touched.firstName && formik.errors.firstName ? (\n                                <div>{formik.errors.firstName}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"lastName\">Last Name</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input\n                                id=\"lastName\"\n                                type=\"text\"\n                                {...formik.getFieldProps(\"lastName\")}\n                            />\n                        </div>\n                        <div className=\"col-2 error-field\">\n                            {formik.touched.lastName && formik.errors.lastName ? (\n                                <div>{formik.errors.lastName}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"email\">Email Address</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input id=\"email\" type=\"email\" {...formik.getFieldProps(\"email\")} />\n                        </div>\n                        <div className=\"col-2 error-field\">   \n                            {formik.touched.email && formik.errors.email ? (\n                                <div>{formik.errors.email}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"password\">Password</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input id=\"password\" type=\"password\" {...formik.getFieldProps(\"password\")} />\n                        </div>\n                        <div className=\"col-2 error-field\">   \n                            {formik.touched.password && formik.errors.password ? (\n                                <div>{formik.errors.password}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input id=\"confirmPassword\" type=\"password\" {...formik.getFieldProps(\"confirmPassword\")} />\n                        </div>\n                        <div className=\"col-2 error-field\">   \n                            {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\n                                <div>{formik.errors.confirmPassword}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"center\">\n                        <Button type=\"success\" text=\"Sign Up\" />\n                    </div>\n                    <h5 className=\"main-heading text-center p-2\">\n                        Already have an account?  \n                        <span className=\"form-about ml-2\">\n                            <a \n                                className=\"form-link ml-2\"\n                                href=\"/login\">\n                                Login\n                            </a>   \n                        </span>\n                    </h5>\n                </form>\n            )}\n        </Formik>\n      </div>\n  );\n}\n","import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../css/signup.css\";\nimport Button from \"../components/reusable/button\";\n\nexport default function LogIn() {\n    const sendLogin = async function (data) {\n        const response = await fetch('/login', {\n          method: 'POST',\n          headers: {'Content-Type':'application/json'},\n          body: JSON.stringify(data)\n        }).then(res => res.json());\n        console.log(response);\n        // if(response.success) {\n        //   alert(response.message);\n        // }\n    }\n    return (\n      <div className=\"container form-container\">\n        <h1 className=\"main-heading text-center p-5\">Log In to <span className=\"form-about\">RentHouse</span> </h1>\n        <Formik\n            initialValues={{ email: \"\", password:\"\" }}\n            validationSchema={Yup.object({\n                email: Yup.string().email(\"Invalid email address\").required(\"*Required\"),\n                password: Yup.string().required('*Required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    setSubmitting(false);\n                    sendLogin(values);\n                }, 400);\n            }}\n            >\n            {(formik) => (\n                <form class=\"form-area\" onSubmit={formik.handleSubmit}>\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"email\">Email Address</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input id=\"email\" type=\"email\" {...formik.getFieldProps(\"email\")} />\n                        </div>\n                        <div className=\"col-2 error-field\">   \n                            {formik.touched.email && formik.errors.email ? (\n                                <div>{formik.errors.email}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"row p-2\">\n                        <div className=\"col-5\">\n                            <label htmlFor=\"password\">Password</label>\n                        </div>\n                        <div className=\"col-5\">\n                            <input id=\"password\" type=\"password\" {...formik.getFieldProps(\"password\")} />\n                        </div>\n                        <div className=\"col-2 error-field\">   \n                            {formik.touched.password && formik.errors.password ? (\n                                <div>{formik.errors.password}</div>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <div className=\"center\">\n                        <Button type=\"success\" text=\"Log In\" />\n                    </div>\n                    <h5 className=\"main-heading text-center p-2\">\n                        Don't have an account?  \n                        <span className=\"form-about ml-2\">\n                            <a \n                                className=\"form-link ml-2\"\n                                href=\"/signup\">\n                                Sign Up\n                            </a>   \n                        </span>\n                    </h5>\n                </form>\n            )}\n        </Formik>\n      </div>\n  );\n}\n","// React imports\nimport React, { useState, useEffect } from \"react\";\n\n//Components\nimport NavBar from './navbar';\nimport Listings from './listings';\n\n\n//Utils\n// import COLORS from \"../utils/colors\";\nimport \"../css/app.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport SignUp from \"./signup\";\nimport LogIn from \"./login\";\n\n\nexport default function App() {\n    const [user, setUser] = useState(null);\n    \n    const getUser = function() {\n        fetch(\"/getUser\")\n            .then(res => res.json())\n            .then(_user => {\n                if(_user.username) setUser(_user.username);\n            });\n    }\n\n    useEffect (getUser, []);\n\n    return (\n        <div className=\"mainDiv\">\n            <NavBar user={user}></NavBar>\n            <Router>\n                <Switch>\n                <Route path=\"/signup\">\n                    <SignUp />\n                </Route>\n                <Route path=\"/login\">\n                    <LogIn />\n                </Route>\n                <Route path=\"/home\">\n                    <Listings />\n                </Route>\n                {/* <Route path=\"/newApplication\">\n                    \n                </Route>\n                <Route path=\"/\">\n                \n                </Route> */}\n                <Route\n                    exact\n                    path=\"/\"\n                    render={() => {\n                        return (\n                        // this.state.isUserAuthenticated ?\n                        <Redirect to=\"/home\" /> \n                        // :<Redirect to=\"/test1\" /> \n                        )\n                    }}\n                />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\n\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './components/app';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}